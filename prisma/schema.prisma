// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(cuid())
  email         String   @unique
  name          String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  // Relations
  documents     Document[]
  summaries     Summary[]
  userPlan      UserPlan?
  usage         Usage[]
  
  @@map("users")
}

model UserPlan {
  id            String   @id @default(cuid())
  userId        String   @unique
  planType      PlanType @default(FREE)
  stripeCustomerId String?
  stripeSubscriptionId String?
  currentPeriodStart DateTime?
  currentPeriodEnd   DateTime?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  // Relations
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("user_plans")
}

model Document {
  id            String   @id @default(cuid())
  userId        String
  fileName      String
  originalName  String
  fileSize      Int
  fileType      String
  filePath      String
  extractedText String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  // Relations
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  summaries     Summary[]
  
  @@map("documents")
}

model Summary {
  id            String   @id @default(cuid())
  userId        String
  documentId    String
  title         String?
  content       String
  summaryType   SummaryType @default(STANDARD)
  wordCount     Int
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  // Relations
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  document      Document @relation(fields: [documentId], references: [id], onDelete: Cascade)
  
  @@map("summaries")
}

model Usage {
  id            String   @id @default(cuid())
  userId        String
  usageType     UsageType
  count         Int      @default(1)
  date          DateTime @default(now())
  
  // Relations
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("usage")
}

enum PlanType {
  FREE
  PRO
  ENTERPRISE
}

enum SummaryType {
  STANDARD
  EXECUTIVE
  TECHNICAL
  BULLET_POINTS
}

enum UsageType {
  DOCUMENT_UPLOAD
  SUMMARY_GENERATION
  EXPORT_DOWNLOAD
}